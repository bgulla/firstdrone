---
## ARM64 Docker Build
kind: pipeline
type: docker
name: arm-build

platform:
  os: linux
  arch: arm

steps:

- name: build
  image: golang:1.13
  commands:
    - "go build -o ./myapp"

- name: publish  
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: bgulla/repo
    auto_tag: true
    auto_tag_suffix: drone-build-arm

---
## AMD64 Docker Build
kind: pipeline
type: docker
name: amd64-build

platform:
  os: linux
  arch: amd64

steps:

- name: build
  image: golang:1.13
  commands:
    - "go build -o ./myapp"

- name: publish  
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: bgulla/repo
    auto_tag: true
    auto_tag_suffix: drone-build-amd64

---
## Docker Manifest Step- combines both architectures into a multi-tagged image. The docker client will pull the appropriate image based on the client's architecture.
### TODO: this is not-waiting for the other build steps to complete and therefore tagging the last build's images. fix this.

kind: pipeline
name: default

steps:
- name: manifest
  image: plugins/manifest
  settings:
    username: 
      from_secret: docker_username
    password:
      from_secret: docker_password
    target: bgulla/repo:production
    template: bgulla/repo:drone-build-ARCH
    platforms:
      - linux/amd64
      - linux/arm
  depends_on:
  - amd64-build
  - arm-build
